from machine import Pin, I2C
from ssd1312 import SSD1312_I2C

import framebuf,sys
import time

# Turn on pull up's for internal I2C 
Pin(8, Pin.IN, Pin.PULL_UP)
Pin(9, Pin.IN, Pin.PULL_UP)

RST = 11 # resest internal OLED 
rst = Pin(RST,Pin.OUT)

# send Reset to OLED 
rst(1)
time.sleep_ms(100)
rst(0)
time.sleep_ms(100)
rst(1)
time.sleep_ms(100)

# Function to draw text on the display
def draw_text(x, y, text):
    for i, c in enumerate(text):
        if c == 'π':
            draw_pi(x - 1 + i * 8, y)
        else:
            oled_i.text(c, x + i * 8, y)

# Function to draw the π symbol
def draw_pi(x, y):
    pi_pattern = [
        0b01111111,
        0b10100100,
        0b00100100,
        0b00100100,
        0b00100100,
        0b00100100,
        0b00100100,
        0b00100011
    ]
    for j in range(8):
        line = pi_pattern[j]
        for i in range(8):
            if (line >> (7 - i)) & 0x01:
                oled_i.pixel(x + i, y + j, 1)

i2c_dev0 = I2C(0, scl=Pin(9),sda=Pin(8),freq=400000)  # start I2C on I2C0 (GPIO 8/9)

#oled_e = SSD1306_I2C (128, 64, i2c_dev1) # External OLED
oled_i = SSD1312_I2C (120, 28, i2c_dev0) # Internal OLED 

# shellbrix logo, 32x32px                      
buffer1 = bytearray([0x00, 0x01, 0xc0, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x04, 0x10, 0x00, 
                    0x00, 0x03, 0x60, 0x00, 0x00, 0x08, 0x88, 0x00, 0x00, 0x3e, 0x3e, 0x00, 0x00, 0x7f, 0x7f, 0x20, 
                    0x02, 0x7f, 0x7f, 0x50, 0x05, 0x7f, 0x7f, 0x48, 0x09, 0x7f, 0x7f, 0x30, 0x06, 0x3e, 0x3e, 0x00, 
                    0x00, 0x88, 0x88, 0x80, 0x03, 0xe3, 0xe3, 0xe0, 0x07, 0xf7, 0xf7, 0xf0, 0x07, 0xf7, 0xf7, 0xf0, 
                    0x07, 0xf7, 0xf7, 0xf0, 0x07, 0xf7, 0xf7, 0xf0, 0x03, 0xe3, 0xe3, 0xe0, 0x00, 0x88, 0x88, 0x80, 
                    0x00, 0x3e, 0x3e, 0x00, 0x00, 0x7f, 0x7f, 0x40, 0x01, 0x7f, 0x7f, 0x60, 0x03, 0x7f, 0x7f, 0x50, 
                    0x05, 0x7f, 0x7f, 0x50, 0x05, 0x3e, 0x3e, 0x90, 0x04, 0x88, 0x89, 0x20, 0x02, 0x41, 0x40, 0xc0, 
                    0x01, 0x81, 0x40, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00])
buffer2 = bytearray([0x00, 0x03, 0x80, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x08, 0x20, 0x00, 
                    0x00, 0x06, 0xc0, 0x00, 0x00, 0x11, 0x10, 0x00, 0x00, 0x7c, 0x7c, 0x00, 0x04, 0xfe, 0xfe, 0x00, 
                    0x0a, 0xfe, 0xfe, 0x40, 0x12, 0xfe, 0xfe, 0xa0, 0x0c, 0xfe, 0xfe, 0x90, 0x00, 0x7c, 0x7c, 0x60, 
                    0x01, 0x11, 0x11, 0x00, 0x07, 0xc7, 0xc7, 0xc0, 0x0f, 0xef, 0xef, 0xe0, 0x0f, 0xef, 0xef, 0xe0, 
                    0x0f, 0xef, 0xef, 0xe0, 0x0f, 0xef, 0xef, 0xe0, 0x07, 0xc7, 0xc7, 0xc0, 0x01, 0x11, 0x11, 0x00, 
                    0x00, 0x7c, 0x7c, 0x00, 0x02, 0xfe, 0xfe, 0x00, 0x06, 0xfe, 0xfe, 0x80, 0x0a, 0xfe, 0xfe, 0xc0, 
                    0x0a, 0xfe, 0xfe, 0xa0, 0x09, 0x7c, 0x7c, 0xa0, 0x04, 0x91, 0x11, 0x20, 0x03, 0x02, 0x82, 0x40, 
                    0x00, 0x02, 0x81, 0x80, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00])

fb1 = framebuf.FrameBuffer(buffer1, 32, 32, framebuf.MONO_HLSB)
fb2 = framebuf.FrameBuffer(buffer2, 32, 32, framebuf.MONO_HLSB)

oled_i.rotate(1)
tani = 0
fcnt = 0
fb = fb1

try:
    while True:
        oled_i.fill(0)
        oled_i.blit(fb, 80, 30-(fcnt%60))
        oled_i.text('Shellbrix',0,0,1)
        draw_text(1,18,'π2Go')
        oled_i.show()
        time.sleep_ms(75)
        fcnt = fcnt + 1
        if fcnt % 4 == 0:
            if fb == fb1:
                fb = fb2
            else:
                fb = fb1
        
except KeyboardInterrupt:
    # send Reset to OLED 
    rst(1)
    time.sleep_ms(100)
    rst(0)
    time.sleep_ms(100)
    rst(1)
    time.sleep_ms(100)

